<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/public/styles.css">
    <title>Parqueos Disponibles</title>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <header class="main-header">
        <h1>🚗 Parqueo Inteligente</h1>
        <nav>
            <a href="/" class="nav-link">Dashboard</a>
            <a href="/parqueos" class="nav-link active">Espacios</a>
            <a href="/camaras" class="nav-link">Cámaras</a>
        </nav>
    </header>

    <main>
        <section class="parqueos-section-header">
            <h2>Espacios de Parqueo</h2>
            <div class="parking-summary">
                <span class="available-count" id="availableCount">
                    <%= slots.filter(s => !s.occupied).length %>
                </span> de <%= totalSlots %> espacios disponibles
            </div>
        </section>

        <section class="parqueos-section" id="parkingSlots">
            <% slots.forEach(slot => { %>
                <div class="parking-space <%= slot.occupied ? 'occupied' : 'available' %>" 
                     data-slot="<%= slot.id %>">
                    <div class="space-number">
                        Espacio <%= slot.id %>
                    </div>
                    <div class="space-status">
                        <%= slot.occupied ? '🚗 Ocupado' : '🟢 Libre' %>
                    </div>
                    <% if (slot.updatedAt) { %>
                        <div class="space-time">
                            Actualizado: <%= new Date(slot.updatedAt).toLocaleTimeString() %>
                        </div>
                    <% } %>
                </div>
            <% }) %>
        </section>

        <section class="legend">
            <h3>Leyenda</h3>
            <div class="legend-items">
                <div class="legend-item">
                    <div class="legend-color available"></div>
                    <span>Espacio disponible</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color occupied"></div>
                    <span>Espacio ocupado</span>
                </div>
            </div>
        </section>
    </main>

    <script>
        const socket = io();
        
        // Conectar y recibir estado inicial
        socket.on('initialState', (data) => {
            console.log('📡 Estado inicial recibido:', data);
            updateParkingSpaces(data);
        });
        
        // Escuchar actualizaciones de espacios en tiempo real
        socket.on('slotUpdate', (data) => {
            console.log(`🅿️ Actualización en tiempo real - Espacio ${data.slotId}: ${data.occupied ? 'OCUPADO' : 'LIBRE'}`);
            
            const slotElement = document.querySelector(`[data-slot="${data.slotId}"]`);
            if (slotElement) {
                slotElement.className = `parking-space ${data.occupied ? 'occupied' : 'available'}`;
                
                const statusElement = slotElement.querySelector('.space-status');
                statusElement.textContent = data.occupied ? '🚗 Ocupado' : '🟢 Libre';
                
                const timeElement = slotElement.querySelector('.space-time');
                if (timeElement) {
                    timeElement.textContent = `Actualizado: ${new Date(data.timestamp).toLocaleTimeString()}`;
                }
                
                // Efecto visual para mostrar el cambio
                slotElement.style.boxShadow = '0 0 20px #4CAF50';
                setTimeout(() => {
                    slotElement.style.boxShadow = '';
                }, 1000);
            }
        });
        
        // Escuchar estadísticas actualizadas
        socket.on('parkingStats', (data) => {
            console.log('📊 Estadísticas actualizadas:', data);
            document.getElementById('availableCount').textContent = data.availableSlots;
        });
        
        function updateParkingSpaces(data) {
            // Actualizar contador
            document.getElementById('availableCount').textContent = data.availableSlots;
            
            // Actualizar cada espacio
            data.slots.forEach(slot => {
                const slotElement = document.querySelector(`[data-slot="${slot.id}"]`);
                if (slotElement) {
                    slotElement.className = `parking-space ${slot.occupied ? 'occupied' : 'available'}`;
                    
                    const statusElement = slotElement.querySelector('.space-status');
                    statusElement.textContent = slot.occupied ? '🚗 Ocupado' : '🟢 Libre';
                    
                    const timeElement = slotElement.querySelector('.space-time');
                    if (slot.updatedAt && timeElement) {
                        timeElement.textContent = `Actualizado: ${new Date(slot.updatedAt).toLocaleTimeString()}`;
                    }
                }
            });
        }
        
        // Indicador de conexión
        socket.on('connect', () => {
            console.log('🔌 Conectado al servidor en tiempo real');
            document.body.style.borderTop = '3px solid #4CAF50';
        });
        
        socket.on('disconnect', () => {
            console.log('🔌 Desconectado del servidor');
            document.body.style.borderTop = '3px solid #f44336';
        });
    </script>
</body>
</html>
